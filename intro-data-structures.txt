1.
  A line of people at an amusement park ride.

  The line is composed of members, represented as strings.
  There is a front to the line, as well as a back.
  When someone enters the line, place them at the end.
  People may leave the line whenever they see fit, and those behind them take their place.
  Given the above real-world information, use an array data structure to code the following solution.

  a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]
  b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.
  c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).
  d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?
  e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?
  f) If Patrick wants to leave the line, how would you delete him from the array?


  a. var members = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

  b. members.push("Mary");

  c. var find = members.find(function(member) {
        return member === "Josh";
     })

     console.log(find);

  d.
     function findMember(member) {
       var members = ["Vivian", "Ava", "Josh", "Patrick", "Mike"]

       for (let i = 0; i < members.length; i++) {
         if (member != members[i]) {
            members.push(member);
            return members;
         }
       }
     }

     findMember('Emily');

  e. members.splice(1, 0, "Melissa")

  f. members.splice(3, 1)


2. Provide another real-world example that you can model using a data structure.

   An array can be used as a data structure for a list of shopping items. For example, items can be
   sorted, deleted, removed, added, and manipulated based on a customer's preferences. Maybe they
   would like to add an item to their list, or later change their mind and want to delete it.

3. How would your data structure allow developers to access and manipulate the data?

   Javascript array methods allow for the manipulation and access of data within an
   array. Arrays as data structures would have this ability. Because data is indexed
   sequentially, developers can access data elements by index.
